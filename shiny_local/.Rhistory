runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
shiny::runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
mr = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/data/megares_v2.00/megares_full_annotations_with_notes_v2.00.csv')
table(mr$RequiresSNPConfirmation)
table(mr$class)
table(mr$class) > 10
sum(table(mr$class) > 10)
sum(table(mr$class) > 25)
sum(table(mr$class) > 50)
sum(table(mr$class) > 100)
mr = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/data/megares_v2.00/megares_full_annotations_with_notes_v2.00.csv')
# 7885 seqs, 7393 w/o SNP confirmations
# 4 types
# 59 classes, 19 classes > 50 samples; 12 > 100 samples
# 236 mechanisms
# 1361
table(mr$class, mr$RequiresSNPConfirmation.)
sum(table(mr$class, mr$RequiresSNPConfirmation.) > 0)
table(mr$class  $RequiresSNPConfirmation)
table(mr$class, $RequiresSNPConfirmation)
table(mr$class, mr$RequiresSNPConfirmation)
q = table(mr$class, mr$RequiresSNPConfirmation)
sum(q[,2])
q[,2]>0
sum(q[,2]>0)
shiny::runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
runApp('github/Tardis/shiny')
shiny::runApp('github/Tardis/standalone')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
b=c(1,6, 70)
sort(b)
shiny::runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
matrix(1:9, nrow = 3, ncol = 3)
a = matrix(1:9, nrow = 3, ncol = 3)
sort(a)
quantile(sort(a), 50)
quantile(sort(a), 0.5)
percentile(a, 5)
percentile <- ecdf(1:10)
percentile(5)
percentile(5.5)
percentile <- ecdf(1:1000)
percentile(5)
percentile(5.5)
percentile(500)
percentile(505)
percentile <- ecdf(9, 8, 7, 6, 5, 10, 1, 2, 3, 4)
percentile <- ecdf(c(9, 8, 7, 6, 5, 10, 1, 2, 3, 4))
percentile(505)
percentile(5)
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
a = c(10, 9, 6)
a-1
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
a=10
porva = function(x) { a+6 }
porva = function() { a+6 }
porva()
a = porva()
porva()
porva()
library(shiny); runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
opt$culo='piscia'
opt[['generation']] = 0
library(shiny); runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
library(shiny); runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
runApp('github/Tardis/shiny_local/app.old.R')
library(shiny); runApp('github/Tardis/shiny_local/app.old.R')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
library(tictoc)
tic()
dist.m = as.matrix(read.table('/home/dottornomade/Dropbox/Scienza/CoViD2019/alignments/20200728_per_nation/USA/per.state/Washington.fa', stringsAsFactors = FALSE, sep = ','))
toc()
tic()
dist.m2 = scan('/home/dottornomade/Dropbox/Scienza/CoViD2019/alignments/20200728_per_nation/USA/per.state/Washington.fa', sep = ','))
toc()
dist.m2 = scan('/home/dottornomade/Dropbox/Scienza/CoViD2019/alignments/20200728_per_nation/USA/per.state/Washington.fa', sep = ',')
shiny::runApp('github/Tardis/shiny_local')
tic()
dist.m = as.matrix(read.table('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', stringsAsFactors = FALSE, sep = ','))
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',')
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',')
toc()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
toc()
library(dplyr)
dist.m2 = vroom('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv')
library(dplyr)
dist.m2 = vroom('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv')
metadata = read.table('/home/dottornomade/Dropbox/Scienza/CoViD2019/alignments/20200728_per_nation/USA/per.state/Washington.csv', sep = ',', stringsAsFactors = FALSE, header = TRUE)
dim(metadata)[1]
genome.names = dist.m2[1:dim(metadata)[1]]
dist.m2 = dist.m2[dim(metadata)[1]+1:length(dist.m2)]
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1]+1)
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
runApp('github/Tardis/shiny_local')
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1]+1)
dist.m2 = matrix(dist.m2, nrow=23)
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=23)
dist.m2
dist.m2[1:10,1:5]
genome.names=dist.m2[1,2:dim(dist.m2)[1]]
genome.names
dist.m2 = dist.m2
dist.m2
dist.m2[1:10,1:5]
dist.m2 = dist.m2[2:dim(dist.m2)[1],dim(dist.m2)[1]]
dist.m2[1:10,1:5]
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=23)
genome.names=dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
dist.m2[1:10,1:5]
rownames(dist.m2)
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=23)
colnames(dist.m2) <- rownames(dist.m2) <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=23)
dist.m2[1,2:dim(dist.m2)[1]]
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
dist.m2[1:10,1:5]
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=23)
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
tic()
dist.m = as.matrix(read.table('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', stringsAsFactors = FALSE, sep = ','))
toc()
tic()
dist.m = as.matrix(read.table('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', stringsAsFactors = FALSE, sep = ','))
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[2])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[2])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc_w.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
dist.m2[1:10,1:5]
runApp('github/Tardis/shiny_local')
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]]
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = as.numeric(dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]])
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
tic()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = matrix(dist.m2, nrow=dim(metadata)[1])
genome.names <- dist.m2[1,2:dim(dist.m2)[1]]
dist.m2 = as.numeric(dist.m2[2:dim(dist.m2)[1],2:dim(dist.m2)[1]])
colnames(dist.m2) <- rownames(dist.m2) <- genome.names
toc()
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m2 = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
rm(dist.m2)
dist.m = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m = matrix(dist.m, nrow=dim(metadata)[1])
dist.m = matrix(dist.m, nrow=dim(metadata)[1]+1)
dist.m = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m = matrix(dist.m, nrow=dim(metadata)[1]+1)
dist.m2[1:10,1:5]
dist.m1[1:10,1:5]
dist.m[1:10,1:5]
genome.names <- dist.m[1,2:dim(dist.m)[1]]
dist.m = as.numeric(dist.m[2:dim(dist.m)[1],2:dim(dist.m)[1]])
dist.m[1:10,1:5]
dist.m = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m = matrix(dist.m, nrow=dim(metadata)[1]+1)
genome.names <- dist.m[1,2:dim(dist.m)[1]]
dist.m = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m = matrix(dist.m, nrow=dim(metadata)[1]+1)
genome.names <- dist.m[1,2:dim(dist.m)[1]]
dist.m = apply((dist.m[2:dim(dist.m)[1],2:dim(dist.m)[1]]), 1, as.numeric)
colnames(dist.m) <- rownames(dist.m) <- genome.names
dist.m[1:10,1:5]
tic()
dist.m = scan('/home/dottornomade/github/Tardis/shiny_local/data/jc.distance.precalc.csv', sep = ',', what=character())
dist.m = matrix(dist.m, nrow=dim(metadata)[1]+1)
genome.names <- dist.m[1,2:dim(dist.m)[1]]
dist.m = apply((dist.m[2:dim(dist.m)[1],2:dim(dist.m)[1]]), 1, as.numeric)
colnames(dist.m) <- rownames(dist.m) <- genome.names
toc()
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
shiny::runApp('github/Tardis/shiny_local')
runApp('github/Tardis/shiny_local')
library(doRNG)
## Loading required package: foreach
## Loading required package: iterators
## Loading required package: parallel
cl <- makeCluster(2)
registerDoParallel(cl)
library(doParallel)
library(doRNG)
cl <- makeCluster(2)
registerDoParallel(cl)
library(doRNG)
cl <- parallel::makeCluster(opt$n_cores)
cl <- parallel::makeCluster(2)
doParallel::registerDoParallel(cl)
# define a stochastic task to perform
task <- function() c(pid=Sys.getpid(), val=runif(1))
# using the previously registered cluster with 2 workers
set.seed(123)
res_2workers <- foreach(i=1:5, .combine=rbind) %dorng% {
task()
}
tic()
res_2workers <- foreach(i=1:5000000, .combine=rbind) %dorng% {
task()
}
library(tictoc)
set.seed(123)
tic()
res_2workers <- foreach(i=1:5000, .combine=rbind) %dorng% {
task()
}
toc()
set.seed(123)
tic()
res_2workers <- foreach(i=1:50000, .combine=rbind) %dorng% {
task()
}
toc()
stopCluster(cl)
length(cl)
cl <- parallel::makeCluster(4)
doParallel::registerDoParallel(cl)
set.seed(123)
tic()
res_2workers <- foreach(i=1:50000, .combine=rbind) %dorng% {
task()
}
toc()
cl <- parallel::makeCluster(8)
doParallel::registerDoParallel(cl)
tic()
res_2workers <- foreach(i=1:50000, .combine=rbind) %dorng% {
task()
}
toc()
cl <- parallel::makeCluster(4)
doParallel::registerDoParallel(cl)
tic()
res_2workers <- foreach(i=1:50000, .combine=rbind) %dorng% {
task()
}
toc()
library(doRNG)
library(tictoc)
cl <- parallel::makeCluster(4)
doParallel::registerDoParallel(cl)
tic()
res_2workers <- foreach(i=1:50000, .combine=rbind) %dorng% {
task()
}
toc()
library(doParallel)
library(tictoc)
cl <- makeCluster(2)
registerDoParallel(cl)
# perform 5 tasks in parallel
tic()
x <- foreach(i=1:5000) %dopar% {
i + runif(1)
}
toc()
unlist(x)
tic()
x <- foreach(i=1:50000) %dopar% {
i + runif(1)
}
toc()
tic()
x <- foreach(i=1:10000) %dopar% {
i + runif(1)
}
toc()
tic()
x <- foreach(i=1:20000) %dopar% {
i + runif(1)
}
toc()
cl <- makeCluster(8)
registerDoParallel(cl)
# perform 5 tasks in parallel
tic()
x <- foreach(i=1:20000) %dopar% {
i + runif(1)
}
toc()
tic()
x <- foreach(i=1:20000) %dopar% {
i + runif(1)
}
toc()
library(doParallel)
library(tictoc)
cl <- makeCluster(4)
registerDoParallel(cl)
# perform 5 tasks in parallel
tic()
x <- foreach(i=1:20000) %dopar% {
i + runif(1)
}
toc()
cl <- makeCluster(2)
registerDoParallel(cl)
# perform 5 tasks in parallel
tic()
x <- foreach(i=1:20000) %dopar% {
i + runif(1)
}
toc()
tic()
x <- foreach(i=1:20000) %dopar% {
runif(1)
}
toc()
unlist(x)
tic()
x <- foreach(i=1:20000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000)/5
exp(sample(q)[1:3])
}
toc()
q = rep(runif(1) + sin(runif(1)), 1000000)/5
q
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
q
tic()
x <- foreach(i=1:20000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
tic()
x <- foreach(i=1:2000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
toc()
tic()
x <- foreach(i=1:2000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
library(shiny); runApp('github/Tardis/shiny_local/app.safe.R')
tic()
x <- foreach(i=1:2000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
toc()
tic()
x <- foreach(i=1:2000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
toc()
library(doParallel)
library(tictoc)
cl <- makeCluster(4)
registerDoParallel(cl)
tic()
x <- foreach(i=1:2000) %dopar% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
library(doRNG)
library(tictoc)
cl <- makeCluster(4)
registerDoParallel(cl)
# perform 5 tasks in parallel
cl <- parallel::makeCluster(4)
parallel::registerDoParallel(cl)
doParallel::registerDoParallel(cl)
cl
tic()
x <- foreach(i=1:2000) %dorng% {
q = rep(runif(1) + sin(runif(1)), 1000000)/5 + runif(1000000)
exp(sample(q)[1:3])
}
library(shiny); runApp('github/Tardis/shiny_local/app.safe.R')
shiny::runApp('github/Tardis/shiny_local')

limits = c(-1, 1)) +
scale_x_discrete( labels=  c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT') ) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
# geom_text(aes(label=sum.labs, y=-0.05), vjust=0, color="brown4", size=3.5) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
to.print[[3]], to.print[[4]],
to.print[[5]], to.print[[6]],
to.print[[7]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Semi-synthetic (PATRIC)", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.patric.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
############
to.print = list()
absolute.ranges = c(0, 0)
for(i in classes){
tmp = patric.df[patric.df$Class == i,]
if(i == 'Sulfonamides'){
tmp=tmp[,!is.na(tmp)]
}
tmp$tot.inst=NULL
tmp = melt(tmp)
tmp$value[tmp$Phenotype == 'susceptible'] = -1*(1-tmp$value[tmp$Phenotype == 'susceptible'])
tmp$variable = factor(tmp$variable, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k.mers', 'metafetures', 'ensemble.LR', 'ensemble.DT'))
p <- ggplot(tmp, aes(x=variable, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = "black") +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'grey'))
# tmp.tmp = tmp
# tmp.tmp$value = abs(tmp.tmp$value)
# tmp.tmp$Phenotype = NULL
# tmp.tmp$Class = NULL
# sum.labs = tmp.tmp %>%
#   group_by(variable) %>%
#   summarise(va = sum(value))
# sum.labs = as.character(rbind(sum.labs$va/2, rep("", length(sum.labs$va))))
p = p +
scale_y_continuous(breaks=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
labels=as.character(abs(c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1))),
limits = c(-1, 1)) +
scale_x_discrete( labels=  c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT') ) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
# geom_text(aes(label=sum.labs, y=-0.05), vjust=0, color="brown4", size=3.5) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
to.print[[3]], to.print[[4]],
to.print[[5]], to.print[[6]],
to.print[[7]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Semi-synthetic (PATRIC)", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.patric.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
to.print = list()
absolute.ranges = c(0, 0)
for(i in classes){
tmp = patric.df[patric.df$Class == i,]
if(i == 'Sulfonamides'){
tmp=tmp[,!is.na(tmp)]
}
tmp$tot.inst=NULL
tmp = melt(tmp)
tmp$value[tmp$Phenotype == 'susceptible'] = -1*(1-tmp$value[tmp$Phenotype == 'susceptible'])
tmp$variable = factor(tmp$variable, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k.mers', 'metafetures', 'ensemble.LR', 'ensemble.DT'))
p <- ggplot(tmp, aes(x=variable, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = "black") +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'white'))
# tmp.tmp = tmp
# tmp.tmp$value = abs(tmp.tmp$value)
# tmp.tmp$Phenotype = NULL
# tmp.tmp$Class = NULL
# sum.labs = tmp.tmp %>%
#   group_by(variable) %>%
#   summarise(va = sum(value))
# sum.labs = as.character(rbind(sum.labs$va/2, rep("", length(sum.labs$va))))
p = p +
scale_y_continuous(breaks=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
labels=as.character(abs(c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1))),
limits = c(-1, 1)) +
scale_x_discrete( labels=  c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT') ) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
# geom_text(aes(label=sum.labs, y=-0.05), vjust=0, color="brown4", size=3.5) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
to.print[[3]], to.print[[4]],
to.print[[5]], to.print[[6]],
to.print[[7]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Semi-synthetic (PATRIC)", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.patric.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
# clean environment
rm(list=ls())
library(ggplot2)
library(ggpubr)
library(dplyr)
library(reshape2)
library(Biostrings)
# contiamo quanti esempi ci sono per classe
classes = c('Aminoglycosides', 'betalactams', 'Fluoroquinolones', 'MLS', 'Phenicol', 'Tetracyclines', 'Sulfonamides')
df.tot.numbers = data.frame(stringsAsFactors = FALSE,
class=character(),
phenotype=character(),
tot.sr=numeric()
)
tot.per.class = NULL
for (class in classes){
message(paste0(class, "\n"))
# PATRIC NAMES
patric.res.names = NULL
patric.sus.names = NULL
for(i in 1:100){
file = paste0('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/data/patric/shortreads/short.reads/', 'selected.res.genes.', class, '.R1.chunk.', i,'.fa')
if(file.exists(file)){
tmp = readDNAStringSet(file)
patric.res.names = c(patric.res.names, names(tmp))
}
file = paste0('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/data/patric/shortreads/short.reads/', 'selected.sus.genes.', class, '.R1.chunk.', i,'.fa')
if(file.exists(file)){
tmp = readDNAStringSet(file)
patric.sus.names = c(patric.sus.names, names(tmp))
}
}
df.tot.numbers = add_row(df.tot.numbers,
class=class,
phenotype='res',
tot.sr=length(patric.res.names))
df.tot.numbers = add_row(df.tot.numbers,
class=class,
phenotype='sus',
tot.sr=length(patric.sus.names))
}
print(df.tot.numbers)
patric.df = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/patric.results.csv')
# aggiustamento
per.conti.su.paper = patric.df
for(i in 1:dim(per.conti.su.paper)[1]){
if(per.conti.su.paper$Phenotype[i] == 'susceptible'){
for(j in c(3:9)){
per.conti.su.paper[i,j] = per.conti.su.paper[i,'tot.inst'] - per.conti.su.paper[i,j]
}
}
}
per.conti.su.paper = melt(per.conti.su.paper)
classes[2] = 'Betalactams'
for(app in c( 'DeepARG', 'k.mers', 'metafetures', 'metaMARC', 'AMRpp', 'ensemble.LR', 'ensemble.DT')){
tmp=per.conti.su.paper[per.conti.su.paper$variable==app,]
tmp$tot.inst = per.conti.su.paper[per.conti.su.paper$variable=='tot.inst',]$value
per.summarize = NULL
for(class in classes){
tmp.c = tmp[tmp$Class==class,]
#print(tmp.c)
per.summarize = c(per.summarize, sum(tmp.c$value)/sum(tmp.c$tot.inst))
}
per.summarize = per.summarize[!is.na(per.summarize)]
print(c(app, summary(per.summarize)))
}
for(i in 1:dim(patric.df)[1]){
patric.df[i,c(3:9)] = patric.df[i,c(3:9)]/patric.df[i,'tot.inst']
}
############
to.print = list()
absolute.ranges = c(0, 0)
for(i in classes){
tmp = patric.df[patric.df$Class == i,]
if(i == 'Sulfonamides'){
tmp=tmp[,!is.na(tmp)]
}
tmp$tot.inst=NULL
tmp = melt(tmp)
tmp$value[tmp$Phenotype == 'susceptible'] = -1*(1-tmp$value[tmp$Phenotype == 'susceptible'])
tmp$variable = factor(tmp$variable, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k.mers', 'metafetures', 'ensemble.LR', 'ensemble.DT'))
p <- ggplot(tmp, aes(x=variable, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = "black") +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'white'))
# tmp.tmp = tmp
# tmp.tmp$value = abs(tmp.tmp$value)
# tmp.tmp$Phenotype = NULL
# tmp.tmp$Class = NULL
# sum.labs = tmp.tmp %>%
#   group_by(variable) %>%
#   summarise(va = sum(value))
# sum.labs = as.character(rbind(sum.labs$va/2, rep("", length(sum.labs$va))))
p = p +
scale_y_continuous(breaks=c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1),
labels=as.character(abs(c(-1, -0.75, -0.5, -0.25, 0, 0.25, 0.5, 0.75, 1))),
limits = c(-1, 1)) +
scale_x_discrete( labels=  c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT') ) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
# geom_text(aes(label=sum.labs, y=-0.05), vjust=0, color="brown4", size=3.5) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
to.print[[3]], to.print[[4]],
to.print[[5]], to.print[[6]],
to.print[[7]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Semi-synthetic (PATRIC)", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.patric.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
###
classes[2] = 'betalactams'
PRJNA215106.df = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/results.PRJNA215106.csv', stringsAsFactors = FALSE)
to.print = list()
absolute.ranges = c(0, max(PRJNA215106.df$Hits)/100000)
for(i in unique(PRJNA215106.df$Class)){
tmp = PRJNA215106.df[PRJNA215106.df$Class == i,] # tmp = patric.df[patric.df$Class == i,]
tmp$Approach = factor(tmp$Approach, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT'))
tmp$value = tmp$Hits/100000
p <- ggplot(tmp, aes(x=Approach, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity") +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'white'))
p = p +
scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1),
limits = absolute.ranges) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Soil", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.PRJNA215106.df.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
to.print.06 = to.print
#####
PRJNA244044 = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/results.PRJNA244044.csv', stringsAsFactors = FALSE)
to.print = list()
absolute.ranges = c(0, max(PRJNA244044$Hits)/100000)
for(i in unique(PRJNA244044$Class)){
tmp = PRJNA244044[PRJNA244044$Class == i,] # tmp = patric.df[patric.df$Class == i,]
tmp$value = tmp$Hits/100000
tmp$Approach = factor(tmp$Approach, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT'))
p <- ggplot(tmp, aes(x=Approach, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = 'black') +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'grey'))
p = p +
scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1),
limits = absolute.ranges) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
ggtitle(i)
to.print[[i]]  = p
}
empty.one = ggplot() + theme_void()
figure = ggarrange(to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Pediatric", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.PRJNA244044.long.2.eps', plot = figure, units = 'cm', width = 30, height = 15)
to.print.44.06 = c(to.print.06, to.print)
figure = ggarrange(to.print.06[[1]], to.print.06[[2]],
#empty.one, empty.one,
to.print.06[[3]], to.print[[4]],
to.print.06[[5]],
to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]],
ncol = 5, nrow = 2,
common.legend = TRUE, legend="bottom",
labels = c("A", "", "", "", "", "B", "", "", "", ""))
figure = annotate_figure(figure,
top = text_grob("Independent test data sets", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.2.eps', plot = figure, units = 'cm', width = 30, height = 20)
per.conti.paper = rbind(PRJNA215106.df, PRJNA244044)
for(app in c('DeepARG', 'metaMARC', 'k-mers', 'AMRpp', 'metafeatures', 'ensemble-LR', 'ensemble-DT')){
tmp = per.conti.paper[per.conti.paper$Approach == app,]
print(c(app, summary(tmp$Hits)/1000))
}
classes[2] = 'betalactams'
PRJNA215106.df = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/results.PRJNA215106.csv', stringsAsFactors = FALSE)
to.print = list()
absolute.ranges = c(0, max(PRJNA215106.df$Hits)/100000)
for(i in unique(PRJNA215106.df$Class)){
tmp = PRJNA215106.df[PRJNA215106.df$Class == i,] # tmp = patric.df[patric.df$Class == i,]
tmp$Approach = factor(tmp$Approach, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT'))
tmp$value = tmp$Hits/100000
p <- ggplot(tmp, aes(x=Approach, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = 'black') +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'white'))
p = p +
scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1),
limits = absolute.ranges) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
ggtitle(i)
to.print[[i]]  = p
}
figure = ggarrange(to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Soil", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.PRJNA215106.df.long.2.eps', plot = figure, units = 'cm', width = 35, height = 15)
to.print.06 = to.print
#####
PRJNA244044 = read.csv('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/results.PRJNA244044.csv', stringsAsFactors = FALSE)
to.print = list()
absolute.ranges = c(0, max(PRJNA244044$Hits)/100000)
for(i in unique(PRJNA244044$Class)){
tmp = PRJNA244044[PRJNA244044$Class == i,] # tmp = patric.df[patric.df$Class == i,]
tmp$value = tmp$Hits/100000
tmp$Approach = factor(tmp$Approach, levels = c('DeepARG', 'metaMARC', 'AMRpp', 'k-mers', 'metafeatures', 'ensemble-LR', 'ensemble-DT'))
p <- ggplot(tmp, aes(x=Approach, y=value, fill=Phenotype)) +
geom_bar(stat="identity", position="identity", color = 'black') +
xlab("") +
ylab("") +
scale_fill_manual(values=c('brown4', 'grey'))
p = p +
scale_y_continuous(breaks=c(0, 0.25, 0.5, 0.75, 1),
limits = absolute.ranges) +
theme_minimal() +
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1, size = 14)) +
ggtitle(i)
to.print[[i]]  = p
}
empty.one = ggplot() + theme_void()
figure = ggarrange(to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]], ncol = 7, nrow = 1,
common.legend = TRUE, legend="bottom")
figure = annotate_figure(figure,
top = text_grob("Pediatric", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.PRJNA244044.long.2.eps', plot = figure, units = 'cm', width = 30, height = 15)
to.print.44.06 = c(to.print.06, to.print)
figure = ggarrange(to.print.06[[1]], to.print.06[[2]],
#empty.one, empty.one,
to.print.06[[3]], to.print[[4]],
to.print.06[[5]],
to.print[[1]], to.print[[2]],
#empty.one, empty.one,
to.print[[3]], to.print[[4]],
to.print[[5]],
ncol = 5, nrow = 2,
common.legend = TRUE, legend="bottom",
labels = c("A", "", "", "", "", "B", "", "", "", ""))
figure = annotate_figure(figure,
top = text_grob("Independent test data sets", face = "bold", size = 14),
left = text_grob("fraction of identified short reads", rot = 90, size = 14))
ggsave('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/paper/figure.2.eps', plot = figure, units = 'cm', width = 30, height = 20)
per.conti.paper = rbind(PRJNA215106.df, PRJNA244044)
for(app in c('DeepARG', 'metaMARC', 'k-mers', 'AMRpp', 'metafeatures', 'ensemble-LR', 'ensemble-DT')){
tmp = per.conti.paper[per.conti.paper$Approach == app,]
print(c(app, summary(tmp$Hits)/1000))
}
q = readRDS('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/10.application/data/test.kmer.rds')
dim(q)
q = readRDS('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/10.application/data/test.metaf.rds')
dim(q)
q
q = readRDS('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/10.application/data/test.metaf.rds')
dim(q)
q = readRDS('/home/dottornomade/Dropbox/Scienza/AMR/deepARG_riders/10.application/data/test.metaf.rds')
dim(q)
set.seed(992092)
rm(list=ls())
library(doRNG)
cl <- parallel::makeCluster(2)
doParallel::registerDoParallel(cl)
library(tictoc)
setwd('/home/dottornomade/Dropbox/Scienza/AMR/the_forest//')
set.seed(992092)
rm(list=ls())
library(doRNG)
cl <- parallel::makeCluster(2)
doParallel::registerDoParallel(cl)
library(tictoc)
setwd('/home/dottornomade/Dropbox/Scienza/AMR/the_forest//')
set.seed(992092)
training.classes = readRDS('data/example.dataset/training.classes.rds')
validation.classes = readRDS('data/example.dataset/validation.classes.rds')
the.whole.forest = readRDS('data/example.dataset/a.thousand.trees.rds')
table(training.classes)
table(validation.classes)
training.classes = as.numeric(readRDS('data/example.dataset/training.classes.rds'))
validation.classes = as.numeric(readRDS('data/example.dataset/validation.classes.rds'))
frac.new=1
# pre allocate the random subsamples for this generation
chromosomes = matrix(nrow = gen.size, ncol = n.samples, -1) # allocate a number of runs equal to r.tries * opt$n.samples
frac.new=1
gen.size=100
chrom.size=1000
# pre allocate the random subsamples for this generation
chromosomes = matrix(nrow = gen.size, ncol = chrom.size, -1) # allocate a number of runs equal to r.tries * opt$n.samples
frac.new=0.5
round( dim(subsamples)[1]*$frac.new )
round( dim(subsamples)[1]*frac.new )
round( dim(chromosomes)[1]*frac.new )
frac.new=0.5
gen.size=100
chrom.size=1000
lambda=37
min_trees=5
max_trees=chrom.size
for(i in 1:10){
q = dpois(x = i, lambda = 37)
print(q)
}
for(i in 1:10){
q = ppois(x = i, lambda = 37)
print(q)
}
for(i in 1:10){
q = ppois(q = i, lambda = 37)
print(q)
}
for(i in 1:1000){
q = ppois(q = i, lambda = 37)
print(q)
}
tree.probs = rep(-1, chrom.size)
for(i in 1:chrom.size){
tree.probs[i] = ppois(q = i, lambda = 37)
}
tree.probs[tree.probs > 0.4]
chrom.size - length(tree.probs[tree.probs > 0.4])
chrom.size - length(tree.probs[tree.probs < 0.4])
chrom.size - length(tree.probs[tree.probs > 1])
chrom.size - length(tree.probs[tree.probs > 0.99])
chrom.size - length(tree.probs[tree.probs > 0.99999])
p=0
chrom.size - length(tree.probs[tree.probs > p])
p=0
chrom.size - length(tree.probs[tree.probs < p])
length(tree.probs[tree.probs < p])
p=0.4
length(tree.probs[tree.probs < p])
p=0
length(tree.probs[tree.probs < p])
chrom.size - length(tree.probs[tree.probs > p])
p=0.4
chrom.size - length(tree.probs[tree.probs > p])
p=1
chrom.size - length(tree.probs[tree.probs > p])
p=0
chrom.size - length(tree.probs[tree.probs > p])
randif
randif()
runif()
runif(1)
min(tree.probs)
tail(tree.probs)
tree.probs[1]
tree.probs[100]
library(Rmpfr)
install.packages("Rmpfr")
library(Rmpfr)
install.packages("Rmpfr")
library(Rmpfr)
p = mpfr(runif(1), 128)
p
tree.probs = rep(-1, chrom.size)
for(i in 1:chrom.size){
tree.probs[i] = mpfr(ppois(q = i, lambda = 37), 256)
}
tree.probs[100]
tree.probs[1]
tree.probs[50]
tree.probs[60]
tree.probs[75]
tree.probs = rep(-1, chrom.size)
for(i in 1:chrom.size){
tree.probs[i] =ppois(q = i, lambda = 37)
}
which(tree.probs == max(tree.probs))
max.trees = which(tree.probs == max(tree.probs))[1]
install_github(repo = 'Gege7177/Dot2dot')
devtools::install_github(repo = 'Gege7177/Dot2dot')
devtools::install_github('emvolz-phylodynamics/sarscov2Rutils')
shiny::runApp('~/github/tardis-phylogenetics/shiny_local')

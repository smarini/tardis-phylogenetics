#!/usr/bin/env Rscript
# libraries
library(optparse)
library(DECIPHER)
option_list = list(
make_option(c("--data.set"), type="character", default="data/example_group.dataset",
help="dataset name"),
make_option(c("--metadata"), type="character", default='data/example_group/metadata.csv',
help="metadata file, should be a csv with the date column called Collection.date in the %d/%m/%Y format; and column Group"),
make_option(c("--paramteres"), type="character", default='data/example_group/parametes.group.csv',
help="parameter file; one line per group; unspecified options will go to default"),
)
opt_parser = OptionParser(option_list=option_list);
opt = parse_args(opt_parser);
setwd('/home/dottornomade/github/tardis-phylogenetics')
metadata = read.table('data/example_group/metadata.group.csv', sep = ',', stringsAsFactors = FALSE, header = TRUE)
genomes = readDNAStringSet('data/example_group/aln.group.fa')
length(genomes)
names(genomes) == metadata$Accession.ID
parameters = read.csv(opt$group.parameters)
parameters = read.csv('data/example_group/parameters.group.csv')
as.they.are = diff(unique(metadata$Group), parameters$group)
unique(metadata$Group)
parameters$group
parameters = read.csv('data/example_group/parameters.group.csv', stringsAsFactors=FALSE)
parameters = read.csv(opt$group.parameters, stringsAsFactors=FALSE)
as.they.are = diff(unique(metadata$Group), parameters$group)
parameters$group
unique(metadata$Group)
as.they.are = diff(parameters$group, unique(metadata$Group))
as.they.are = unique(metadata$Group)[!unique(metadata$Group) %in% parameters$group]
parameters = c('a', 'b', 'c')
parameters = read.csv('data/example_group/parameters.group.csv', stringsAsFactors=FALSE)
as.they.are = unique(metadata$Group)[!unique(metadata$Group) %in% c('a', 'b', 'c')]
length(as.they.are)
as.they.are = unique(metadata$Group)[!unique(metadata$Group) %in% parameters$group]
p='a'
data.dir=/home/dottornomade/github/tardis-phylogenetics/data/example_group
data.dir='/home/dottornomade/github/tardis-phylogenetics/data/example_group'
system(paste('makedir -p', data.dir)) # here we store stuff
system(paste('mkdir -p', data.dir)) # here we store stuff
writeXStringSet(genomes[names(genomes) %in% metadata$Accession.ID], filepath = paste(data.dir, 'aln.fa', sep = '/') )
paste(data.dir, 'aln.fa', sep = '/')
writeXStringSet(genomes[names(genomes) %in% metadata$Accession.ID], filepath = paste(data.dir, p, 'aln.fa', sep = '/') )
write.csv(metadata[metadata$Group %in% p,], filepath = paste(data.dir, p,  'metadata.csv', sep = '/') )
write.csv(metadata[metadata$Group %in% p,], file = paste(data.dir, p,  'metadata.csv', sep = '/') )
parameter.file = c(
paste0("params.data_set = \"", p, "\""),
"params.nsamples = ", parameters$nsamples[p],
"params.gensize = ", parameters$gensize[p],
"params.nbatches = ", parameters$nbatches[p],
"params.ncores = ", parameters$ncores[p],
"params.ngenerations = ", parameters$ngenerations[p],
"params.fracnew = ", parameters$fracnew[p],
"params.fracevolved = ", parameters$fracevolved[p],
"params.fracelite = ", parameters$fracevolved[p]
)
parameter.file
p=1
parameter.file = c(
paste0("params.data_set = \"", p, "\""),
"params.nsamples = ", parameters$nsamples[p],
"params.gensize = ", parameters$gensize[p],
"params.nbatches = ", parameters$nbatches[p],
"params.ncores = ", parameters$ncores[p],
"params.ngenerations = ", parameters$ngenerations[p],
"params.fracnew = ", parameters$fracnew[p],
"params.fracevolved = ", parameters$fracevolved[p],
"params.fracelite = ", parameters$fracevolved[p]
)
parameter.file
parameter.file = c(
paste0("params.data_set = \"", parameters$group[p], "\""),
"params.nsamples = ", parameters$nsamples[p],
"params.gensize = ", parameters$gensize[p],
"params.nbatches = ", parameters$nbatches[p],
"params.ncores = ", parameters$ncores[p],
"params.ngenerations = ", parameters$ngenerations[p],
"params.fracnew = ", parameters$fracnew[p],
"params.fracevolved = ", parameters$fracevolved[p],
"params.fracelite = ", parameters$fracevolved[p]
)
parameter.file
data.dir
data.dir = paste(opt$base.dir, 'data', parameters$group[p], sep = '/')
data.dir='/home/dottornomade/github/tardis-phylogenetics/data/example_group/a'
writeXStringSet(genomes[names(genomes) %in% metadata$Accession.ID], filepath = paste(data.dir, 'aln.fa', sep = '/') )
write.csv(metadata[metadata$Group %in% parameters$group[p],], file = paste(data.dir,  'metadata.csv', sep = '/') )
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
parameter.file = c(
paste0("params.data_set = \"", parameters$group[p], "\""),
paste("params.nsamples = ", parameters$nsamples[p]),
"params.gensize = ", parameters$gensize[p],
"params.nbatches = ", parameters$nbatches[p],
"params.ncores = ", parameters$ncores[p],
"params.ngenerations = ", parameters$ngenerations[p],
"params.fracnew = ", parameters$fracnew[p],
"params.fracevolved = ", parameters$fracevolved[p],
"params.fracelite = ", parameters$fracevolved[p]
)
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
parameter.file = c(
paste0("params.data_set = \"", parameters$group[p], "\""),
paste("params.nsamples = ", parameters$nsamples[p]),
"params.gensize =", parameters$gensize[p],
"params.nbatches =", parameters$nbatches[p],
"params.ncores =", parameters$ncores[p],
"params.ngenerations =", parameters$ngenerations[p],
"params.fracnew =", parameters$fracnew[p],
"params.fracevolved =", parameters$fracevolved[p],
"params.fracelite =", parameters$fracevolved[p]
)
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
parameters = read.csv(opt$group.parameters, stringsAsFactors=FALSE)
parameters = read.csv('data/example_group/parameters.group.csv', stringsAsFactors=FALSE)
parameter.file = c(
paste0("params.data_set = \"", parameters$group[p], "\""),
paste("params.nsamples = ", parameters$nsamples[p]),
"params.gensize =", parameters$gensize[p],
"params.nbatches =", parameters$nbatches[p],
"params.ncores =", parameters$ncores[p],
"params.ngenerations =", parameters$ngenerations[p],
"params.fracnew =", parameters$fracnew[p],
"params.fracevolved =", parameters$fracevolved[p],
"params.fracelite =", parameters$fracevolved[p]
)
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
parameters = read.csv('data/example_group/parameters.group.csv', stringsAsFactors=FALSE)
parameters
options.tardis = parameters[p,-"group"]
options.tardis = parameters[p,-group]
options.tardis = parameters[p,]
options.tardis
options.tardis = parameters[p,-group]
which(colnames(parameters) == 'group')
options.tardis = parameters[p,-which(colnames(parameters) == 'group')]
options.tardis
options.tardis = options.tardis[!is.na(options.tardis)]
options.tardis
options.tardis = parameters[p,-which(colnames(parameters) == 'group')]
which(is.na(parameters[p,]))
is.na(parameters[p,]
)
parameters[p,]
parameters = read.csv('data/example_group/parameters.group.csv', stringsAsFactors=FALSE)
parameters[p,]
p=2
parameters[p,]
which(is.na(parameters[p,]))
options.tardis = parameters[p,-c(which(colnames(parameters) == 'group'), which(is.na(parameters[p,]))]
options.tardis = parameters[p,-c(which(colnames(parameters) == 'group'), which(is.na(parameters[p,])))]
options.tardis
paste(colnames(options.tardis, '=', options.tardis))
options.tardis
paste(colnames(options.tardis), '=', options.tardis))
paste(colnames(options.tardis), '=', options.tardis)
options.tardis = parameters[p,-c(which(colnames(parameters) == 'group'), which(is.na(parameters[p,]))]
options.tardis = parameters[p,-c(which(colnames(parameters) == 'group'), which(is.na(parameters[p,])))]
parameter.file = c(
paste0("params.data_set = \"", parameters$group[p], "\""),
paste(colnames(options.tardis), '=', options.tardis)
)
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
data.dir
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
p=1
writeLines(parameter.file, con=paste0(data.dir, '/', parameters$group[p], '.config'))
